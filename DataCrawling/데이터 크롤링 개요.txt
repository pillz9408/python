데이터 크롤링 개요

크롤링 (Web Crawler)
	- 자동화 된 방법으로 웹에서 다양한 정보를 수집하는 소프트웨어

	빅데이터 - 디지털 환경에서 생성되는 수치, 문자, 이미지, 영상 데이터를 모두 포함하는 대규모 데이터
		5V = 규모(Volume), 다양성(Variety), 정확성(Veracity), 가치(Value), 속도(Velocity) 

	수집데이터 형태
	1) 정형 - 관계형 데이터 베이스, 스프레드시트, CSV
	2) 반정형 
	3) 비정형

크롤링(Crawling)과 스크래핑(Scraping)의 차이
크롤링 - 동적
스크래핑 - 정적

스크래핑에 사용되는 라이브러리
- BeautifulSoup 라이브러리 : Request 로 받은 데이터를 BeautifulSoup객체화를 진행해주는 오픈소스 라이브러리
태그 찾기 = soup.select("tag_name")
특정 태그와 클래스 = soup.select ('tag_name.class_name')
특정 태그의 하위 태그   > 를 통해 하위 태그 지정
request 라이브러리 사용.

크롤링시에 사용하는 라이브러리
- Selenium 라이브러리 : 브라우저 동작을 자동화 할수 있는 오픈 소스 라이브러리
* 동적인 데이터 수집 가능 (로그인, 입력 후 보이는 정보)  but 속도 느림 , 브라우저를 통한 연속적 접근  + Chrome driver 라이브러리 사용


105.0.5195.102

WebDriver 조작하기
창크기 1) 최대화 driver.maximize_window()
	 2) 최소화 driver.minimize_window()
닫기    1) 현재 탭 driver.close()
	 2) 브라우저 driver.quit()
이동	 1) 뒤로가기 driver.back()
	 2) 앞으로 가기 driver.forward()
	 3) 해당 탭으로 이동 driver.switch_to.window(driver.window_handles[0]) #[0] 인덱스 = 첫번째 탭으로 이동

Selenium의 elements
- find_elements_by_css_selector(" ") : 상대주소
- find_elements_by_xpath(" ") : 절대주소
- find_elements_by_name(" ")
- find_elements_by_id(" ")
* elements = 선택자에 해당하는 모든 요소가 선택됨, element = 해당 선택자에 해당하는 첫번째 하나의 요소가 선택됨

WebDriver 키보드 입력 / 클릭하기

키보드  = from selenium.webdriver.common.keys import Keys
키전달 search = driver.find_element_by_id("query")

	문자입력 - search.send_keys("전달하고싶은 문자")
	엔터키 - search.send_keys(Keys.ENTER)
	마우스 클릭 - search.click()


